<Page
    x:Class="UiDesktopAppTest.Views.Pages.DashboardPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:UiDesktopAppTest.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="DashboardPage"
    d:DataContext="{d:DesignInstance local:DashboardPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">

    <Grid VerticalAlignment="Top">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        
        <!--x:Name="btnClickMe"처럼 이렇게 x:Name을 명명해준 요소들은 코드비하인드 클래스의 필드(멤버변수)로서 존재하게 되고-->
        <ui:Button
            Grid.Column="0"
            x:Name="btnClickMe"
            Command="{Binding ViewModel.CounterIncrementCommand, Mode=OneWay}"
            Content="Click me!"
            Icon="Fluent24" />
        
        <ui:Button
            Grid.Column="2"
            Command="{Binding ViewModel.TextChangedCommand, Mode=OneWay}"
            Content="Click me!"
            Icon="Fluent24" />
        
        <!--아래 TextBlock 처럼 명명을 해주지 않은 요소들은 WPF 내부의 Visual Tree에는 존재하지만, 컴파일시 대응 하는 필드가 자동으로 생성되지 않는, 즉 코드비하인드 클래스의 필드로서 존재하는 것은 아니게 된다. -->
        <TextBlock
            Grid.Column="1"
            Margin="12,0,0,0"
            VerticalAlignment="Center"
            Text="{Binding ViewModel.Text, Mode=OneWay}" />
    </Grid>
</Page>
